---
import Layout from "../layouts/Layout.astro";
import Welcome from "../components/welcome.astro";
import Loading from "../components/Loading.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
---

<Layout
  title="WiiLink WFC - 404"
  description="The page you were looking for isn't quite here... | WiiLink Wi-Fi Connection (WWFC) is a brand new service that allows you to play online games with your friends on your Wii!"
  image="img/banners/default.png"
>
  <Loading />
  <Header
    specialInstructions="transform:translate(0, 30px); backdrop-filter: blur(0px); background-color: #12121200; box-shadow:0px 0px 0px #ffffff00; position:absolute;"
  />

  <head>
    <style>
      body {
        background-color: rgb(11, 0, 0);
        margin: 0;
      }
    </style>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN"
      crossorigin="anonymous"
    />
    <script is:inline src="//unpkg.com/three"></script>
    <script is:inline src="//unpkg.com/globe.gl"></script>
  </head>

  <body>
    <div class="herobg"></div>
  <div style="top:30px; left:0; width:100%; height:100%; position:absolute;">
    <div
      style="top:50%; left:50%; transform:translate(-50%, -50%); width:80%; max-width:500px; display:flex; flex-wrap:wrap; align-items:center; justify-content:center; z-index: 1000000; position:absolute;"
    >
      <h1
        style="color:white; font-family: Rubik; font-weight:800; font-size:78px; text-align:center; z-index:1; position:relative;"
      >
        404
      </h1><h2 style="color:white; margin-bottom:10px; transform:translate(0, -10px); text-align:center;">The page you were looking for could not be found...</h2>
      <a href="/">
      <button class="btn btn-success" style="padding:10px; padding-left:20px; padding-right:20px;"
        ><i class="fa fa-home"></i> Head back home</button
      >
    </a>
    </div>
    <div
      id="globeViz"
      style="top:0px; left:50%; filter:brightness(0.8); transform:translate(-50%, 0); z-index: 0; position:relative;"
    >
    </div>
  </div>
  <Footer />

  <script is:inline>
    window.addEventListener("scroll", function () {
      const mainDiv = document.getElementById("main");
      const scrollPos = document.documentElement.scrollTop / 1;
      mainDiv.style.transform = `translateY(-${scrollPos}px)`;
    });
  </script>

  <script is:inline>
    const N = 10;

    let cities = [
      { name: "New York", lat: 40.7128, lng: -74.006 },
      { name: "Tokyo", lat: 35.6895, lng: 139.6917 },
      { name: "Sydney", lat: -33.8688, lng: 151.2093 },
      { name: "Rio de Janeiro", lat: -22.9068, lng: -43.1729 },
      { name: "Cape Town", lat: -33.9249, lng: 18.4241 },
      { name: "Beijing", lat: 39.9042, lng: 116.4074 },
      { name: "Cairo", lat: 30.0444, lng: 31.2357 },
      { name: "Madrid", lat: 40.4168, lng: -3.7038 },
      { name: "Los Angeles", lat: 34.0522, lng: -118.2437 },
      { name: "Houston", lat: 29.7604, lng: -95.3698 },
      { name: "Lagos", lat: 6.5244, lng: 3.3792 },
      { name: "Nairobi", lat: -1.286389, lng: 36.817223 },
      { name: "Buenos Aires", lat: -34.6037, lng: -58.3816 },
      { name: "Quito", lat: -0.1807, lng: -78.4678 },
    ];

    let gData = cities.map((city, i) => {
      return {
        lat: city.lat,
        lng: city.lng,
        startLat: city.lat,
        startLng: city.lng,
        name: [
          "Jess",
          "Alex",
          "Alex",
          "Giustino",
          "Pablo",
          "oscie",
          "Luna",
          "diego",
          "Sketch",
          "Palapeli",
          "Nova",
          "Kouacc",
          "Philemax",
          "Jau",
          "Matthe815",
        ][i % 14],
        game: [
          "Samba de Amigo",
          "UNO WiiWare",
          "Tetris Party",
          "Inazuma Eleven Go",
          "Mario Kart Wii",
          "Wii Chess",
          "Super Smash Bros. Brawl",
        ][i % 7],
        isOpen: [false, false, false, false, false, false, false, false][i % 8],
        faces: [
          "jess.png",
          "alexb.png",
          "alexv.png",
          "idk.png",
          "pablo.png",
          "oscie.png",
          "luna.png",
          "diego.png",
          "idk.png",
          "palapeli.png",
          "nova.png",
          "kouacc.png",
          "idk.png",
          "idk.png",
          "matthe.png",
        ][i % 14],
        icons: [
          "samba.png",
          "uno.png",
          "tetrisparty.png",
          "inazuma.png",
          "mkw.png",
          "chess.png",
          "smash.png",
        ][i % 7],
      };
    });

    gData = gData.map((item, index) => {
      const nextItem = gData[(index + 1) % gData.length];
      return {
        ...item,
        endLat: nextItem.lat,
        endLng: nextItem.lng,
      };
    });

    let gData2 = cities.map((city, i) => {
      return {
        lat: city.lat,
        lng: city.lng,
        startLat: city.lat,
        startLng: city.lng,
      };
    });

    gData2 = gData2.map((item, index) => {
      const nextItem = gData2[(index + 1) % gData2.length];
      return {
        ...item,
        endLat: nextItem.lat,
        endLng: nextItem.lng,
      };
    });

    let gData3 = cities.map((city, i) => {
      return {
        lat: city.lat,
        lng: city.lng,
      };
    });

    const world = Globe({ animateIn: false })(
      document.getElementById("globeViz"),
    )
      .globeImageUrl("/img/globe/earth.jpg")
      .bumpImageUrl("/img/globe/bump.jpg")
      .htmlElementsData(gData)
      .htmlElement((d) => {
        const el = document.createElement("div");
        let isOpened = d.isOpen ? "block" : "none";
        let isClosed = d.isOpen ? "none" : "block";
        let size = d.isOpen ? "100%" : "60%";
        let opacity = d.isOpen ? "1" : "0.7";
        let size2 = d.isOpen ? "70" : "120";
        let zIndex = d.isOpen ? "1000000" : "1";
        el.innerHTML =
          "<div style='animation: fadein 0.2s linear forwards; filter:brightness(" +
          opacity +
          ") opacity(" +
          opacity +
          "); transform:scale(" +
          size +
          ");  width:330px; display:flex; gap:0px; z-index:" +
          zIndex +
          " position:relative;'><img style='transform:translate(-10px, 0); filter:drop-shadow(0px 0px 30px #ffffff60);' src='img/miis/" +
          d.faces +
          "' alt='Team member' height='70px'><div style='display:" +
          isOpened +
          "; background-color:ffffff40; color:white; padding:13px; border:1.8px solid #ffffff20; backdrop-filter:blur(8px); --webkit-backdrop-filter:blur(8px); font-family:system-ui; border-radius:8px; transition:0.5s; position:relative;'><b>" +
          d.name +
          "</b> is playing </br><img style='top:0; right:0; transform:translate(0, -1px); postion:absolute;' src='img/games/" +
          d.icons +
          "' alt='Game icon' width='20px' height='20px'> <b>" +
          d.game +
          "</b></div><img style='top:0; right:0; transform:translate(-15px, -15px); display:" +
          isClosed +
          "; postion:absolute;' src='img/games/" +
          d.icons +
          "' alt='Game icon' width='40px' height='40px'></div>";
        el.style.width = `${size2}px`;
        return el;
      })
      .backgroundColor("#ffffff00")
      .arcsData(gData2.filter((_, index) => index < gData2.length / 1))
      .arcColor(() => "rgba(118, 118, 238, 0.5)")
      .arcStroke(0.7)
      .arcDashLength(0.9)
      .arcDashGap(1)
      .arcDashAnimateTime(() => Math.random() * 4000 + 2000)
      .ringsData(gData3)
      .ringColor(() => "rgb(118, 118, 238)")
      .ringMaxRadius(1)
      .ringPropagationSpeed(1)
      .ringRepeatPeriod(0.1);

    // Auto-rotate
    world.controls().autoRotate = true;
    world.controls().enableZoom = false;
    world.controls().autoRotateSpeed = 0.25;

    // Add clouds sphere
    const CLOUDS_IMG_URL = "/img/globe/clouds.png";
    const CLOUDS_ALT = 0.01;
    const CLOUDS_ROTATION_SPEED = 0.005; // deg/frame

    new THREE.TextureLoader().load(CLOUDS_IMG_URL, (cloudsTexture) => {
      const clouds = new THREE.Mesh(
        new THREE.SphereGeometry(
          world.getGlobeRadius() * (1 + CLOUDS_ALT),
          75,
          75,
        ),
        new THREE.MeshPhongMaterial({
          map: cloudsTexture,
          transparent: true,
          opacity: 0.5,
        }),
      );
      world.scene().add(clouds);

      (function rotateClouds() {
        clouds.rotation.y += (CLOUDS_ROTATION_SPEED * Math.PI) / 180;
        requestAnimationFrame(rotateClouds);
      })();
    });
  </script>
  <script
    is:inline
    src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
    crossorigin="anonymous"></script>
  <script
    is:inline
    src="https://kit.fontawesome.com/e47ece3e74.js"
    crossorigin="anonymous"></script>
</Layout>

<style>
  html body {
    background-color: rgb(11, 0, 0);
  }
  .herobg {
    background: linear-gradient(
        to bottom,
        rgba(255, 255, 255, 0) 70%,
        rgba(11, 0, 0, 1) 100%
      ),
      url("/img/bg.png");
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    animation: changecolor 10s infinite;
    width: 100%;
    height: 100vh;
    position: relative;
  }
  .topholder {
    top: 0;
    left: 50%;
    transform: translate(-50%, 0);
    width: 100%;
    height: 1000px;
    max-width: 1500px;
    z-index: 1000000;
    position: absolute;
  }
  #main {
    bottom: 250px;
    right: 38px;
    transform: translate(0, 0);
    width: 550px;
    position: absolute;
  }
  @keyframes changecolor {
    0% {
      filter: hue-rotate(0deg);
    }
    100% {
      filter: hue-rotate(360deg);
    }
  }
  @keyframes fadein {
    0% {
      opacity: 0;
    }
    100% {
      opacity: 1;
    }
  }

  @media only screen and (max-width: 600px) {
    .topholder {
      top: 0;
      left: 0;
      transform: translate(0, 0);
      width: 100%;
      height: 100%;
      position: absolute;
    }
    #main {
      bottom: 50%;
      right: 0;
      width: 100%;
      height: auto;
      transform: translate(0, 50%) !important;
      position: absolute;
    }
  }
</style>
